# drobadi continuous integration
name: main

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the prod branch
  push:
    branches:
      - npmjs
      - main
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [ 18.x ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          # version from package.json
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          echo ::group::Install dependencies
          echo "install"
          pnpm i --frozen-lockfile
          echo ::endgroup::

      - name: CHECK - Check for outdated dependencies (non-blocking warning)
        run: |
          echo "🔍 Checking for outdated dependencies..."
          if pnpm outdated --depth=3; then
            echo "::notice title=Deps OK::✅ Dependencies are up to date 🎉"
          else
            echo "::warning title=ℹ️ 🕸 Outdated Dependencies::Some dependencies are outdated. Please consider updating them."
          fi

      - name: Run tests
        env:
          DROBADI_TEST_VERBOSE: true
          DROBADI_ARCHIVER_VERBOSE: true
          DROBADI_TEST_APP_KEY: ${{ secrets.DROBADI_TEST_APP_KEY  }}
          DROBADI_TEST_APP_SECRET: ${{ secrets.DROBADI_TEST_APP_SECRET  }}
          DROBADI_TEST_REFRESH_TOKEN: ${{ secrets.DROBADI_TEST_REFRESH_TOKEN  }}
        run: |
           echo ::group::CI Test
           pnpm ci-test
           echo ::endgroup::

      - name: Report coverage
        continue-on-error: true
        uses: romeovs/lcov-reporter-action@v0.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

      - name: CHECK - Run inline pnpm audit (non-blocking warning)
        run: |
          echo "🔍 Checking for vulnerabilities..."
          if pnpm audit; then
            echo "::notice title=Audit OK::✅ Audit is fine 🎉"
          else
            echo "::warning title=ℹ️ vulnerabilities found"
          fi

      - name: CHECK - pnpm audit and comment on PR
        if: ${{ github.event.pull_request }}
        uses: JamesRobertWiseman/pnpm-audit@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: moderate   # 'low'|'moderate'|'high'|'critical'
          fails: true

      - name: Publish NpmJS package
        if: github.ref == 'refs/heads/npmjs'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_DEPLOY_TOKEN }}" > .npmrc
          npm whoami # rely on .npmrc
          npm publish
          echo "::notice title=Publish OK::✅ Npmjs updated successfully 🎉"